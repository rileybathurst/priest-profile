/* Contents
-------------------------------------------------------------- */

// I'm removing the contents until I have the pieces in order
// splitting out sheets etc

// ðŸš¨ 30th March 2021 running through the sheets as a lot seems pretty messy

// ðŸš¨ what issue?
/* Medium Up screens - fixes header issue
@media only screen and (min-width: 40.063em) {
	.full {
	  width: 100%;
	}
} */

// this is a messy place to have this but until I get everything sorted it's here for now
@import "variables";
@import "base-typography.scss";
@import "molecules";
@import "buttons";

/*------------------------------------*\
  #Reset
\*------------------------------------*/
body {
  margin: 0; // browser reset // ðŸ“£ is this needed? whats the default
}

figure {
  margin: 0; // ðŸ“£ browser reset whats the default
}

picture,
img,
h4 {
  display: block; // ðŸ“£ are these inline?
}
/* Finish Reset */

main {
  max-width: 100vw; // ðŸ“£ what is this overwriting?
}

/*------------------------------------*\
  #Backgrounds
\*------------------------------------*/



.bg-primary {
  background: $primary-color;
  color: $white;

  a {
    color: $white;
    text-decoration: underline;
  }
  a:hover {
    color: $black;
  }
  cite {
    color: $medium-gray; // ðŸ“£ check the contrast on this
  }
}

.bg-secondary {
  background: $secondary-color;
  color: $white;

  a {
    color: $white; // ðŸ“£ this is the same as the text color so I should fix that at some point
    text-decoration: underline;
  }
  a:hover {
    color: $light-gray;
    background: darken($secondary-color, 10%); // ðŸ“£ set this as a variable
    transition: 0.5s ease;
  }
}

.bg-light-gray {
  background: $light-gray;
  // ðŸ“£ check the contast with regular text
}

.bg-medium-gray {
  background: $medium-gray;
  // ðŸ“£ check the contast with regular text
}

.bg-dark-gray {
  background: $dark-gray;
  // ðŸ“£ check the contast with regular text

  a {
    color: $white;
    transition: 0.5s ease;
    display: block;
  }

  a:hover {
    // I think this was just for the hero box
    // which Im moving up a few levels to be able to do a few things at once
    color: $black;
  }
}

.bg-black {
  background: $black;
  color: $white;
}


header {
  @extend .bg-secondary; // mobile menu background
}

// ðŸ“£ these needs to become variables
.shadow {
  // box-shadow: 0 2px 5px 0 rgba(0,0,0,0.16),0 2px 10px 0 rgba(0,0,0,0.12);
  // current, Im not sure why I was doing 2 shadows seems overly complicated
  /* offset-x | offset-y | blur-radius | spread-radius | color */
  box-shadow: 0 2px 5px 0 rgba(0, 0, 0, 0.16);
}

.shadow-darker {
  box-shadow: 0 2px 5px 0 rgba(0, 0, 0, 0.32), 0 2px 10px 0 rgba(0, 0, 0, 0.24);
}

.attachment-post-thumbnail {
  box-shadow: 0 2px 5px 0 rgba(0, 0, 0, 0.16), 0 2px 10px 0 rgba(0, 0, 0, 0.12);
}

/*  2. Spacing
	Used around the page for readability styling
-------------------------------------------------------------- */

// ðŸ“£ I dont like this but atleast it's used so work on it
.gp2-tb {
  padding-top: $global-margin * 2;
  padding-bottom: $global-margin * 2;
}

// ðŸ“£ used but could be done better
.no-margin {
  margin: 0;
}

// ðŸ“£ can I do something with *?
[type="text"],
[type="password"],
[type="date"],
[type="datetime"],
[type="datetime-local"],
[type="month"],
[type="week"],
[type="email"],
[type="number"],
[type="search"],
[type="tel"],
[type="time"],
[type="url"],
[type="color"],
textarea {
  background: $light-gray;
}

/*  5 - Fixes - foundation 6 overwrite is written here so foundation can be updated
-------------------------------------------------------------- */

/* ðŸ“£ this can be interesting but I need to define if I'm using it
commented out as of March 30 2021
p {
	text-align: left;

	@media (min-width:$breakpoint__large) {
	text-align: justify;
	}
} */

nav,
.menu-primary-container {
  font-size: 1.2em;
  letter-spacing: 0.1rem;

  @media (min-width: $breakpoint__large) {
    font-family: $major-font-family; // ðŸš¨ what is this before and why?
  }
}

.menu-primary-container > ul > a, // ðŸš¨ this should never happen
.menu-primary-container > ul > li > a {
  border-bottom: 5px solid $secondary-color; // invisibile until hovered
}

.menu-primary-container > ul > a:hover,
.menu-primary-container > ul > li > a:hover {
  color: darken($white, 10%);
  background: darken($secondary-color, 10%);
  border-bottom: 5px solid darken($secondary-color, 20%);
  // playing around with an additional design style
  // this needs documentation I'm using a bunch of blues
}

.menu {
  justify-content: center;
  padding: 0;
  margin: 0;
  list-style: none;
  position: relative;
  display: flex;
}

.menu a { // does this conflict or add to above?
  text-decoration: none;
}

.menu-primary-container a:hover {
  background: #006087; // ðŸš¨ hack I need to make this from a variable
}

.menu li {
  padding: $global-padding; // lets start setting a vertical rythm
}

// ðŸ“£ what is this?
abbr[title] {
  border-bottom: none;
}
abbr {
  font-size: 100%;
  text-decoration: underline;
}

/*------------------------------------*\
  #Images
\*------------------------------------*/

iframe {
  max-width: 100%;
}

/*------------------------------------*\
  #Layout
\*------------------------------------*/

.hero {
  display: grid;
  max-width: 89.9em; // stops 3 or more columns
  margin: $global-margin auto; // center float
  padding: $global-padding; // small size never get to the edge
  grid-gap: $global-margin;

  // start doing columns once its bigger - slightly a hack
  @media (min-width: $breakpoint__medium) {
    grid-template-columns: 1fr 1fr;
  }
}

.footer-contact-areas {
  max-width: 75rem;
  margin: 0 auto;
  display: flex;
  justify-content: space-around;
  padding: $global-padding;
}

footer {
  align-self: end;
  margin-bottom: 0; // browser reset
}

.hero-logo {
  display: grid;
  place-items: center;

  // ðŸ“£ these next parts are design not layout
  z-index: 3; // sliding logo
  position: relative; // needed for z-index

  svg {
    fill: $white;
    width: 100%; // needed for chrome
  }

  a {
    display: inline-block;
    // max-width: 33%;
    max-width: 50%;
    margin: $global-margin auto;
    padding: $global-padding; // start doing more with a type scale and vertical rythm
    border-radius: 5px;

    @media (min-width: $breakpoint__medium) {
      max-width: $general-measure;
      margin-top: $global-margin * 2;
      margin-bottom: $global-margin * 2;
    } // @media
  } // a
} // .hero-logo

.hero-logo a:hover {
  background: darken($primary-color, 10%);
  transition: 0.5s ease;

  svg {
    fill: darken($white, 10%); // ðŸ“£ document this
  }
}

// ðŸ“£ this naming is off these are elements not modifiers
.header-contact--icon {
  grid-column: 1;
  align-self: stretch;
  background: $black; // ðŸ“£ this is design not layout

  svg {
    margin: $global-margin;
  }
}

.header-contact--text {
  grid-column: 2;
  width: 100%;

  p {
    height: 100%; // fill the box

/*     b { ðŸš¨ // this isnt a tag
      display: inline-block;
      height: 100%;
      width: 100%;
 */
    a {
      // height: 100%;
      width: calc(100% - 2rem);
      height: calc(100% - 2rem);
      display: flex;
      align-items: center;
      // color: darken($white, 10%); // overwrite the bg-dark-grey which is kinda messy anyway
      color: $white; // overwrite the bg-dark-grey which is kinda messy anyway
      padding: $global-padding;
    } // a
  } // p
} // .header-contact--text

// ðŸ“£ this naming is off
.header-contact--text__underline {
  text-decoration: underline;
  text-decoration-thickness: 0.125em;
  // not working on chrome yet https://caniuse.com/#search=text-decoration-thickness
}

.footer-icons {
  justify-items: center;
  // I think this was the whole point but I can probably do it easier with a flex
  display: flex;
  flex-direction: column;
  border-radius: 5px;

  @media (min-width: $breakpoint__large) {
    flex-direction: row;
  }
}

// im mixing the display and styling
// this is on the div i might be able to avoid that with some blocks
.footer-icons:hover {
  background: $white;
  background: lighten($primary-color, 10%);
  transition: ease 0.5s; // having this on the hover is needed not to load and then transform
  // ðŸ“£ but that probably doesnt hover back

  a {
    color: $light-gray; // ðŸ“£ this isnt a link color
  }

  svg {
    fill: $light-gray;
  }
}

.footer-icon-icon {
  // ðŸš¨ terrible names
  grid-column: 1;
  grid-row: 1;
  align-self: center;

  @media (min-width: $breakpoint__large) {
    justify-self: end; // why?
  }
}

.footer-icon-icon svg {
  fill: $white; // moved away from primary to pass contrast guidelines
}

.footer-icon-text {
  grid-column: 1;
  grid-row: 2;
  display: block;

  @media (min-width: $breakpoint__large) {
    grid-column: 2;
    grid-row: 1;
  }

  > p {
    display: block;
    height: 100%;

    > a {
      display: flex;
      height: 100%;
      align-items: center;

      > span {
        padding: $global-padding;
      } // > span
    } // a
  } // p
} // .footer-icon-text

// this needs extra love beacuse its not a link but im not sure this is right
.footer-icons_fax {
  display: flex;
  flex-direction: column;
  @media (min-width: $breakpoint__large) {
    flex-direction: row;
  }

  > .footer-icon-text {
    padding: $global-padding;

    @media (min-width: $breakpoint__large) {
      padding: $global-padding/2;
    }

    p {
      display: flex;
      align-items: center;
    } // p
  } // > .footer-icon-text
} // .footer-icons_fax

#header-contact-background {
  background: $light-gray;
  margin-bottom: $global-margin * 2;
  padding: $global-padding * 2 $global-padding 0 $global-padding;
  // no bottom due to the contact boxes changing alignment is easier to have the bottom margin there
}

.header-contact {
  max-width: 89.9em;
  margin: 0 auto;
  display: flex;
  flex-direction: column;

  h3 {
    margin-top: 0; // reset from type scale as we already have a break but sort this our
  }

  @media (min-width: $breakpoint__large) {
    flex-direction: row;

    h3 {
      // once its in the row its a little different on the layout
      margin-bottom: 0;
      padding-right: $global-padding; // ðŸ“£ this is possibly causing the columns to be different sizes
    }
  }
}

.together {
  display: inline-block;
  width: 100%;
}

#header-contact--phone,
#header-contact--place {
  margin-bottom: $global-margin * 2;
  display: flex;
  background: $dark-gray;
}

#header-contact--phone svg,
#header-contact--place svg {
  fill: $white;
}

#header-contact--phone:hover,
#header-contact--place:hover {
  background: darken($secondary-color, 10%); // ðŸ“£ document this
  color: darken($white, 10%); // ðŸ“£ document this
  transition: 0.5s ease; // this should be a variable

  .header-contact--icon {
    background: darken($secondary-color, 15%); // ðŸ“£ document this

    a {
      display: inline-block;
      color: darken($white, 10%) !important; // ðŸ“£ document this
    } // a
  } // .header-contact--icon
} // #header-contact--!

.service-info {
  flex-direction: column;

  @media (min-width: $breakpoint__medium) {
    flex-direction: row;
  }
}

// can I do more of this with an @extend
.swiss::before {
  @media (min-width: $breakpoint__medium) {
    content: ""; // show up
    width: calc(50% - 1em); // leave space for the gap
    border: 0.5rem solid #e6e6e6; // ðŸ“£ document this
  }
}

.swiss {
  margin-bottom: 1rem;
  border: 0.5rem solid #e6e6e6;
  // width: 100%; this overcooks the width on small devices
  display: flex; // im not quite sure how this is working but its needed

  @media (min-width: $breakpoint__medium) {
    border: none;
  }
}

.swiss::after {
  @media (min-width: $breakpoint__medium) {
    content: "";
    width: calc(50% - 1em);
    border: 0.5rem solid #e6e6e6;
    margin-left: $global-margin * 2;
  }
}

// poor naming
.grid-container {
  padding-left: $global-padding;
  padding-right: $global-padding;
  max-width: 75rem;
  margin-left: auto;
  margin-right: auto;
}

// poor naming
.service {
  display: flex;
  flex-direction: column;
  margin-bottom: $global-margin * 2;

  @media (min-width: $breakpoint__medium) {
    flex-direction: row;
    margin: $global-margin;
  }

  // ðŸ“£ this should be a variable
  @media (min-width: 75rem) {
    // this is a little hacky
    margin-left: auto;
    margin-right: auto;
    max-width: 73rem; // means it never quite hits the edges
  }
}

.service > div {
  flex: 1;
}

// ðŸ“£ I think this is a terrible old foundation name
.grid-x {
  display: flex;
}

.grid-padding-x > .cell {
  padding-left: $global-padding;
  padding-right: $global-padding;
}

.hide-for-large {
  @media (min-width: $breakpoint__large) {
    display: none !important; // does this need important?
  }
}

.show-for-large {
  display: none;
  @media (min-width: $breakpoint__large) {
    display: block; // not sure if this is exactly right
  }
}

.hide-for-full {
  @media (min-width: $breakpoint__full) {
    display: none !important; // does this need the !
  }
}

.show-for-full {
  display: none;
  @media (min-width: $breakpoint__full) {
    display: block; // not sure if this is exactly right
  }
}

// ðŸ“£ bad old naming
.wp-block-colum {
  flex-basis: calc(50% - 16px);
  flex-grow: 0;
}

.copyright {
  float: left; // needed to have the p margin inside of this
  width: 100%;
  padding-top: 1rem;
  padding-bottom: $global-padding * 2;

  p {
    padding: $global-padding;
  }
}

// ðŸš¨ I need more sheets
#menu_toggle {
  z-index: 2; // sliding menu
  position: relative; // needed for z-index

  display: grid;

  @media (min-width: $breakpoint__medium) {
    display: none;
  }
}

.menu-small > ul {
  display: flex;
  flex-direction: column;
}

.small_menu--opener {
  width: 100%;
  height: 100%;
  cursor: pointer;
  padding-top: $global-padding;
  padding-bottom: $global-padding;
  transition: 1s ease;
}

.small_menu--opener:hover {
  color: darken($white, 10%); // ðŸ“£
  background: darken($secondary-color, 10%); // ðŸ“£
}

#menu_small {
  background: darken($secondary-color, 10%); // ðŸ“£

  // sliding menu
  display: inline-block;
  transition: 3s ease; // sliding menu
  position: absolute;
  z-index: 1; // check its above the gallery on the front page
  margin-bottom: 0;
  width: 100%;
}

// why are these not nested?
#menu_small ul {
  padding-left: 0;
  margin: 0;
}

#menu_small li {
  list-style: none;
  margin-left: 0;
}

#menu_small li:last-child {
  padding-bottom: 0.1rem; // try match the default styling I should work on this
}

#menu_small li:last-child a {
  border-bottom: none;
}

#menu_small a {
  padding: $global-padding;
  display: block;
  border-bottom: darken($primary-color, 20%) 1px solid; // ðŸ“£
  color: $white;
  margin: 5px;
}

#menu_small a:hover {
  background-color: $secondary-color;
  // this would be good to have a js ripple
}

.active {
  margin-top: 4rem; // enough to show the home line
}

.inactive {
  margin-top: calc(-100% + 4rem); // ðŸš¨ this is too much
}

.small_menu--opener,
.small_menu--icon {
  grid-row: 1;
  grid-column: 1;
  align-self: center;
}

.small_menu--icon {
  justify-self: end;
  margin-right: $global-margin;
  transition: 2s ease; // the slide in on load is kinda nice but maybe overkill
  // background: tomato;
  cursor: pointer; // match the link

  display: grid;
}

.small_menu--icon span {
  transition: 0.5s ease; // the slide in on load is kinda nice but maybe overkill
}

.small_menu--icon-topline,
.small_menu--icon-bottomline {
  width: 1rem;
  height: 0.25rem;
  background: $white;
  display: block;
  transform: rotate(0deg);
  top: 0;
  position: relative;
}

.small_menu--icon-bottomline {
  margin-top: 0.5rem;
  // background: tomato; // which line is which
}

.active ~ #menu_toggle > .small_menu--icon > .small_menu--icon-topline {
  transform: rotate(45deg);
  grid-row: 1;
  grid-column: 1;
  align-self: center;
  justify-self: center;
  margin: 0;
}

.active ~ #menu_toggle > .small_menu--icon > .small_menu--icon-bottomline {
  transform: rotate(-45deg);
  grid-row: 1;
  grid-column: 1;
  align-self: center;
  justify-self: center;
  margin: 0;
}

.show-for-medium {
  display: none;
  @media (min-width: $breakpoint__medium) {
    display: block;
  }
}

.page-width {
  max-width: 75rem; // this is way wider than a measure
  margin-left: auto;
  margin-right: auto;
  padding-left: $global-padding;
  padding-right: $global-padding;
}

.hero {
  // tone down the size of the hero text but stick to the type scale
  h1 {
    font-size: 1.728em; // try even further down at an h3
    line-height: 1.35em; // guess and check select some text to check its right

    @media (min-width: $breakpoint__medium) {
      font-size: 2.074em; // h2 halfway back up
    }

    @media (min-width: $breakpoint__large) {
      font-size: 2.448em; // return to normal
    }
  }

  h2 {
    font-size: 1.728em;
    line-height: 1.33em; // guess and check select some text to check its right

    @media (min-width: $breakpoint__medium) {
      font-size: 2.074em;
    }
  }
}

// forms
// working from this https://codepen.io/chicagoing/pen/XMXVvE
// and then breaking it in all sorts of ways to be a grid

// ðŸš¨ these are for the quote page which isn't ready yet they should be split out till then
.order-form-section {
  // position: relative; I think this is needed as its got to fill the whole space but I might just do that with grid
  background: #e3f6ff; // ðŸ“£
  display: grid;
  height: 4rem; // this maybe shouldnt be hard coded but its kinda needed for now
  margin-bottom: $global-margin * 2;
  border: 2px solid lighten($primary-color, 20%);
  border-radius: 4px;
}

.order-form-section.field--not-empty {
  border-color: $primary-color;
}

.order-form-section label {
  // base state is empty

  grid-row: 1;
  grid-column: 1;

  // box-sizing: border-box; // need to research this
  // display: block;
  padding: 0.5em 1em;
  // pointer-events: none; // what is this?
  // position: absolute; // this is causing first problems

  // top: 0;
  transition: all 0.2s ease-out;
  // user-select: none;
  // white-space: nowrap; // this is useful but I dont understand it yet
  width: calc(100% - 2rem);
  // z-index: 1;

  // opacity: 0; // start hidden? should we start the other way and then hide it?

  align-self: center;
}

.order-form-section.field--not-empty label {
  // no spaces so it only works with both selectors it's kinda overkill as thats the only place I use the not-empty class
  align-self: start;
}

.order-form-section input[type="text"],
.order-form-section input[type="email"],
.order-form-section input[type="number"] {
  grid-row: 1;
  grid-column: 1;
  z-index: 100;
  background: none; // remove the default styling as Im taking it up a level
  border: none;
  padding: 0.5em 1em;
  font-size: 1rem; // browser reset
  line-height: 1rem; // browser reset
  transition: all 0.2s ease-out;
  width: calc(100% - 2rem);
}

.order-form-section input[type="text"],
.order-form-section input[type="email"],
.order-form-section input[type="number"] {
  align-self: stretch;
}

.order-form-section.field--not-empty input[type="text"],
.order-form-section.field--not-empty input[type="email"],
.order-form-section.field--not-empty input[type="number"] {
  align-self: end;
}

.order-form-select {
  margin-bottom: $global-margin * 2;
}

.order-form-select label {
  padding: $global-padding;
  padding-top: 0; // sort of hacky
  display: inline-block;
}

// https://www.filamentgroup.com/lab/select-css.html
.select-css {
  display: block;
  font-size: 16px;
  font-family: sans-serif;
  font-weight: 700;
  color: #444;
  line-height: 1.3;
  padding: $global-padding;
  width: 100%;
  max-width: 100%;
  box-sizing: border-box;
  margin: 0;
  border: 2px solid lighten($primary-color, 20%); // ðŸ“£
  border-radius: 4px;
  -moz-appearance: none; // im pretty sure i can remove this
  -webkit-appearance: none;
  appearance: none;
  background: #e3f6ff; // ðŸ“£
}
.select-css::-ms-expand {
  display: none;
}
.select-css:hover {
  border-color: #888; // ðŸ“£
}
.select-css:focus {
  border-color: #aaa; // ðŸ“£
  box-shadow: 0 0 1px 3px rgba(59, 153, 252, 0.7); // ðŸ“£
  box-shadow: 0 0 0 3px -moz-mac-focusring; // ðŸ“£
  color: #222; // ðŸ“£
  outline: none;
}
.select-css option {
  font-weight: normal;
}

.order-form-slider {
  margin-bottom: $global-margin * 2;
}

.order-form-slider label {
  padding: $global-padding;
  display: inline-block;
}

.order-form-slider input[type="range"] {
  display: block;
  width: 100%;
}

.order-form-submit input[type="submit"] {
  margin-bottom: $global-margin * 3;
  border-radius: 2px; // should this be global
  -webkit-appearance: none; // reset browser defaults
  @extend button;
}

#testimonials h3 {
  max-width: 75rem; // should this be on the section
  margin: 0 auto;
  padding: $global-padding;
}

#star {
  display: grid;
  grid-template-rows: 1fr 1.55fr;
  // guess and check to get the middle to sit on the star line

  > .bg-light-gray {
    // this isnt great as its linked to the name when it shouldnt be
    grid-row: 1;
    grid-column: 1;
  }

  > #star-container {
    grid-row: 1/3;
    grid-column: 1;
  }

  > .bg-medium-gray {
    grid-row: 2;
    grid-column: 1;
  }
}

#star-container {
  max-width: 75rem;
  margin: 0 auto;
  display: flex;
  justify-content: space-around;

  > svg {
    width: 100%;
    max-width: 5rem;
    fill: $secondary-color;
    margin-left: $global-margin;
    margin-right: $global-margin;
  }
}

#quoted {
  max-width: $general-measure;
  margin: 0 auto;
  padding: $global-padding;

  > p::before {
    content: '"'; // left quote
    font-size: 2.488rem;
    font-weight: bold;
    font-family: $major-font-family;
    margin-right: $global-margin/2;
  }

  > footer {
    font-size: 1.2rem;
    font-weight: bold;
  }
}

#footer-logo {
  max-width: 20rem;
  margin: 0 auto;
  fill: $white;

  > a {
    display: block;
    padding: $global-padding;
    border-radius: 5px;
  }

  svg {
    fill: $white;
  }
}


// home testimonial animation
// http://css3.bradshawenterprises.com/cfimg/

/*
n = 4
a = 3
b = 1
t = 16
ad = 4
*/

#quotes {
  display: grid;
  justify-items: stretch;
  align-items: stretch;
}
#quotes > blockquote {
  // make double sure to add the bracket as gatsby image does strange things here
  grid-column: 1;
  grid-row: 1;
  animation-name: FadeInOut;
  animation-duration: 16s;
  animation-timing-function: ease-in-out;
  animation-iteration-count: infinite;

  background: $medium-gray;
  width: calc(100% - 2rem);
}

/* Just do the link I dont understand the math */
@keyframes FadeInOut {
  0% {
    // always
    opacity: 1;
  }
  18.75% {
    // 3/16*100
    opacity: 1;
  }
  25% {
    // (3+1)/16*100 = 1/4*100
    opacity: 0;
  }
  93.75% {
    // 100-(1/16*100)
    opacity: 0;
  }
  100% {
    // always
    opacity: 1;
  }
}

#quotes > blockquote:nth-of-type(1) {
  animation-delay: 12s;
}
#quotes > blockquote:nth-of-type(2) {
  animation-delay: 8s;
}
#quotes > blockquote:nth-of-type(3) {
  animation-delay: 4s;
}
#quotes > blockquote:nth-of-type(4) {
  animation-delay: 0s;
}


.page-template-page-swiss article {
	max-width: 75rem;
	margin-left: auto;
	margin-right: auto;
	padding-left: $global-padding;
	padding-right: $global-padding;

	video {
		max-width: 100%;
		margin-bottom: $global-margin*3;
	}

	.attachment-post-thumbnail {
		margin-bottom: $global-margin*2;
	}

	/*
	.wp-block-column:not(:first-child) { this throws some design erros on small devices
		// margin-left: $global-margin*2 !important; // overwrite default I would like to get down to as few important as possible I just need to work on the specificity
	}
	*/

	.wp-block-media-text {

		.wp-block-media-text__content {
			padding: 0 !important;
		}

		@media (min-width: 600px) {
			grid-template-columns: 1fr 1fr !important; // needs to be after a media query
			grid-gap: $global-margin*2;
			margin-bottom: $global-margin;
		}
	}
}

/*   .blocks-gallery-item img {
	object-fit: cover;
  } */

.wp-block-media-text {
  display: grid;
  
  grid-gap: 2rem;
  margin-bottom: 1rem;

  @media (min-width: $breakpoint__medium) {
    grid-template-columns: 1fr 1fr;
  }
}

.wp-block-media-text__media {
  @media (min-width: $breakpoint__medium) {
    grid-row: 1;
    grid-column: 2;
  }
}

.gallery-width {
  max-width: 75rem;
  margin-left: auto;
  margin-right: auto;
}

.blocks-gallery-grid {
  display: flex;
  flex-wrap: wrap;
  list-style: none;
  padding-left: 0;
  // align-items: stretch;
  justify-content: space-between;

  // sneaky little hack to give each item padding to use in the middle but pulled back to the sides
  margin-left: -0.5rem;
  margin-right: -0.5rem;
}

// ðŸ“£ this is lots of really old things I dont want
@media (max-aspect-ratio: 1/1) and (max-width: 480px) {
	.blocks-gallery-grid {
	  flex-direction: row;
	}
  
	.blocks-gallery-item {
	  height: auto;
	  width: 100%;
	}
	.blocks-gallery-item img {
	  width: 100%;
	  max-height: 75vh;
	  min-width: 0;
	}
}

.blocks-gallery-item {
    flex: 1 1 15rem;
    padding: $global-padding/2;
}

.gallerygallery {
	margin: $global-margin;
	width: 100%;

	@media (min-width: $breakpoint__medium) {
		width: calc(50% - 2rem);
	}

	@media (min-width: $breakpoint__large) {
		width: calc(33% - 2rem);
	}

	li {
		// display: flex;
		padding-bottom: $global-margin;
		max-height: 100%;
	}
}